version: '3'

services:
  app-pgstac:
    container_name: stac-fastapi-pgstac
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - APP_HOST=0.0.0.0
      - APP_PORT=8082
      - RELOAD=false
      - ENVIRONMENT=local
      - POSTGRES_USER=username
      - POSTGRES_PASS=password
      - POSTGRES_DBNAME=postgis
      - POSTGRES_HOST_READER=database
      - POSTGRES_HOST_WRITER=database
      - POSTGRES_PORT=5432
      - WEB_CONCURRENCY=2
      - VSI_CACHE=TRUE
      - GDAL_HTTP_MERGE_CONSECUTIVE_RANGES=YES
      - GDAL_DISABLE_READDIR_ON_OPEN=EMPTY_DIR
      - DB_MIN_CONN_SIZE=1
      - DB_MAX_CONN_SIZE=1
    ports:
      - "8082:8082"
    depends_on:
      - database
    command:
      - "./scripts/wait-for-it.sh"
      - "database:5432"
      - "--"
      - "python"
      - "-m"
      - "stac_fastapi.pgstac.app"
    healthcheck:
      test: [ "CMD", "curl -f http://localhost:8082/ || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s

  database:
    container_name: stac-db
    image: bitner/pgstac:0.2.4
    environment:
      - POSTGRES_USER=username
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=postgis
    ports:
      - "5432:5432"
    command: postgres -N 500
    healthcheck:
      test: ["CMD", "pg_isready -h localhost -p 5432 -U username"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 20s

  pgstac-loadtestdata:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - ENVIRONMENT=development
    command: 
      - "./scripts/wait-for-it.sh"
      - "--timeout=20"
      - "app-pgstac:8082"
      - "--"
      - "python"
      - "/app/scripts/ingest_testdata.py"
      - "http://app-pgstac:8082"
    depends_on: 
      - database
      - app-pgstac
